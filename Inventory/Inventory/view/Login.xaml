<Window x:Class="Inventory.view.Window1"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Inventory.view"
        mc:Ignorable="d"
        Title="Window1" Height="600" Width="954">
    <Window.Resources>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="RoundedTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="RoundedPasswordBoxStyle" TargetType="{x:Type PasswordBox}">
            <Setter Property="PasswordChar" Value="●"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border x:Name="border" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RoundedButtonStyle2" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="#FF29BFEE" RenderTransformOrigin="0.466,0.525">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="100*"/>
            <ColumnDefinition Width="10*"/>
        </Grid.ColumnDefinitions>
        <Rectangle Fill="#FFF4F4F5" HorizontalAlignment="Left" Height="569" VerticalAlignment="Top" Width="450"/>
        <TextBlock HorizontalAlignment="Left" Margin="109,99,0,0" TextWrapping="Wrap" Text="WELCOME TO" VerticalAlignment="Top" Foreground="#FF29BFEE" FontSize="40" FontFamily="Trebuchet MS"/>
        <TextBlock HorizontalAlignment="Left" Margin="32,193,0,0" TextWrapping="Wrap" Text="&quot;INVENTORY APPLICATION&quot;" VerticalAlignment="Top" Foreground="#FF29BFEE" FontSize="30" FontWeight="Bold"/>
        <Image HorizontalAlignment="Left" Height="277" Margin="10,292,0,0" VerticalAlignment="Top" Width="440" Source="../assets/image 9.png" Stretch="Fill"/>
        <Ellipse Fill="#AA29BFEE" HorizontalAlignment="Left" Height="58" Margin="0,10,0,0" VerticalAlignment="Top" Width="68" RenderTransformOrigin="-0.64,-0.06"/>
        <Ellipse Fill="#AA29BFEE" HorizontalAlignment="Left" Height="58" Margin="404,94,0,0" VerticalAlignment="Top" Width="68" RenderTransformOrigin="-0.64,-0.06"/>
        <Ellipse Fill="#AA29BFEE" HorizontalAlignment="Left" Height="48" Margin="42,280,0,0" VerticalAlignment="Top" Width="58" RenderTransformOrigin="-0.64,-0.06"/>
        <Ellipse Fill="#AAFFFFFF" HorizontalAlignment="Left" Height="58" Margin="18,55,0,0" VerticalAlignment="Top" Width="68" RenderTransformOrigin="-0.64,-0.06" Grid.Column="1"/>
        <Ellipse Fill="#AAFFFFFF" HorizontalAlignment="Left" Height="58" Margin="478,482,0,0" VerticalAlignment="Top" Width="68" RenderTransformOrigin="-0.64,-0.06"/>
        <Ellipse Fill="#AAFFFFFF" HorizontalAlignment="Left" Height="77" Margin="2,492,0,0" VerticalAlignment="Top" Width="84" RenderTransformOrigin="-0.64,-0.06" Grid.Column="1"/>
        <Ellipse Fill="#AAFFFFFF" HorizontalAlignment="Left" Height="43" Margin="478,0,0,0" VerticalAlignment="Top" Width="47" RenderTransformOrigin="-0.64,-0.06"/>
        <Image HorizontalAlignment="Left" Height="360" Margin="498,-32,0,0" VerticalAlignment="Top" Width="414" Source="../assets/my-password 1.png" Stretch="Fill" Grid.ColumnSpan="2"/>
        <TextBlock HorizontalAlignment="Left" Margin="678,200,0,0" TextWrapping="Wrap" Text="LOGIN" VerticalAlignment="Top" Foreground="White" FontSize="25" FontFamily="Trebuchet MS" FontWeight="Bold"/>
        <TextBox x:Name="txtUsername" HorizontalAlignment="Left" Height="36" Margin="559,264,0,0" TextWrapping="Wrap" Text="Username" VerticalAlignment="Top" Width="301" Background="White" Foreground="#FF29BFEE" BorderBrush="{x:Null}" FontSize="20" TextAlignment="Center" Style="{DynamicResource RoundedTextBoxStyle}"/>
        <Image HorizontalAlignment="Left" Height="22" Margin="574,271,0,0" VerticalAlignment="Top" Width="22" Source="../assets/Vector.png" Stretch="Fill" RenderTransformOrigin="0.5,0.5">
            <Image.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform AngleX="-0.341"/>
                    <RotateTransform/>
                    <TranslateTransform X="0.077"/>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>
        <Ellipse Fill="#FF29BFEE" HorizontalAlignment="Left" Height="4" Margin="583,344,0,0" VerticalAlignment="Top" Width="4"/>
        <TextBlock HorizontalAlignment="Left" Margin="559,381,0,0" TextWrapping="Wrap" Text="Doesn't Have An Account?" VerticalAlignment="Top" Foreground="White" FontSize="15"/>
        <Button x:Name="btnLogin" Content="LOGIN" HorizontalAlignment="Left" Height="55" Margin="559,431,0,0" VerticalAlignment="Top" Width="301" Background="White" BorderBrush="{x:Null}" Foreground="#FF29BFEE" FontSize="20" FontWeight="Bold" Style="{DynamicResource RoundedButtonStyle2}"/>
        <PasswordBox x:Name="txtPassword" HorizontalAlignment="Center" Margin="559,322,0,0" VerticalAlignment="Top" Width="301" Height="34" BorderBrush="{x:Null}" Background="White" Password="******" Foreground="#FF29BFEE" TextOptions.TextFormattingMode="Display" TextOptions.TextHintingMode="Fixed"  HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Style="{DynamicResource RoundedPasswordBoxStyle}" />
        <Image HorizontalAlignment="Left" Height="17" Margin="573,331,0,0" VerticalAlignment="Top" Width="24" Source="../assets/Vector (1).png"/>
        <Ellipse Fill="#FFF4F4F5" HorizontalAlignment="Left" Height="3" Margin="583,337,0,0" VerticalAlignment="Top" Width="3"/>
        <Ellipse Fill="#FF29BFEE" HorizontalAlignment="Left" Height="4" Margin="583,336,0,0" VerticalAlignment="Top" Width="4"/>
        <Button x:Name="btnRegister" Content="REGISTER" HorizontalAlignment="Left" Height="39" Margin="758,372,0,0" VerticalAlignment="Top" Width="102" Background="White" BorderBrush="{x:Null}" Foreground="#FF29BFEE" FontSize="15" FontWeight="Bold" Click="btnRegister_Click_1" Style="{DynamicResource RoundedButtonStyle1}"/>
    </Grid>
</Window>
